worker_processes  1;
error_log  logs/error.log debug;
events {
	worker_connections  1024;
}

# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
#        chunk_size 4000;
	allow play all;

	#creates our "live" full-resolution HLS videostream from our incoming encoder stream and tells where to put the HLS video manifest and video fragments
        application live {
#            allow play all;
            live on;
            # Turn on HLS
            hls on;
            hls_path /HLS/live;
            hls_fragment 3s;
            hls_playlist_length 60;
            # disable consuming the stream from nginx as rtmp
#            deny play all;
        }
        application vod {
	    play /video_recordings;
	}
    }
}
http {
    include mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name elearningp2p.ml;
	return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name elearningp2p.ml;
        ssl_certificate 
/etc/letsencrypt/live/elearningp2p.ml/fullchain.pem;
        ssl_certificate_key 
/etc/letsencrypt/live/elearningp2p.ml/privkey.pem;
	ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        location / {
            root html;
            index index.html index.htm;
        }
        
        #allows us to see how stats on viewers on our Nginx site using a 
        #URL like: "http://my-ip/stats"
	location /stats {
	    stub_status;
	}

location /live {
## your_location configuration
    ## .....
    ## end of /your_location configuration      
      
    ## ---- ADD THIS TO CONFIGURE CORS, OPTIONS and RANGE REQUESTS -----
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            # Custom headers and headers various browsers *should* be OK with but aren't
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            add_header 'Access-Control-Allow-Origin' '*';
            return 200;
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }
    ## -----END OF CORS, OPTIONS, RANGE REQUESTS CONF-------------------  
types {
application/vnd.apple.mpegurl m3u8;
}
alias /HLS/live;
add_header Cache-Control no-cache;
}


    }
}
